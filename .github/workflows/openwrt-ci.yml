# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]
  watch:
    types: [started]

jobs:
  build_openwrt:
    name: Build OpenWrt firmware
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Clone source code
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      - name: Update and install feeds
        run: |
          cd openwrt
          #         sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          sed -i '$a\src-git opentopd  https://github.com/sirpdboy/sirpdboy-package' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          cd openwrt
          rm -f ./.config*
          touch ./.config
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          cat >> .config <<EOF
          CONFIG_TARGET_rockchip=y
          CONFIG_TARGET_rockchip_armv8=y
          CONFIG_TARGET_MULTI_PROFILE=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2c=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r5s=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-neo3=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_embedfire_doornet1=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_embedfire_doornet2=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_xunlong_orangepi-r1-plus=y
          CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_xunlong_orangepi-r1-plus-lts=y
          CONFIG_PACKAGE_luci-ssl=n # uhttpd服务
          CONFIG_PACKAGE_luci-ssl-nginx=y # nginx
          CONFIG_PACKAGE_kmod-ptp=n
          CONFIG_PACKAGE_kmod-bnx2x=n
          CONFIG_PACKAGE_kmod-mlx4-core=n
          CONFIG_PACKAGE_kmod-mlx5-core=n
          CONFIG_PACKAGE_kmod-igc=n
          CONFIG_PACKAGE_kmod-sfc=n
          CONFIG_PACKAGE_kmod-e1000e=n
          CONFIG_PACKAGE_kmod-igb=n
          CONFIG_PACKAGE_kmod-igbvf=n
          CONFIG_PACKAGE_kmod-ixgbe=n
          CONFIG_PACKAGE_kmod-ixgbevf=n
          CONFIG_PACKAGE_kmod-i40e=n
          CONFIG_PACKAGE_kmod-tg3=n
          CONFIG_ARM64_CRYPTO=y
          CONFIG_CRYPTO_AES_ARM64=y
          CONFIG_CRYPTO_AES_ARM64_BS=y
          CONFIG_CRYPTO_AES_ARM64_CE=y
          CONFIG_CRYPTO_AES_ARM64_CE_BLK=y
          CONFIG_CRYPTO_AES_ARM64_CE_CCM=y
          CONFIG_CRYPTO_CRCT10DIF_ARM64_CE=y
          CONFIG_CRYPTO_AES_ARM64_NEON_BLK=y
          CONFIG_CRYPTO_CRYPTD=y
          CONFIG_CRYPTO_GF128MUL=y
          CONFIG_CRYPTO_GHASH_ARM64_CE=y
          CONFIG_CRYPTO_SHA1=y
          CONFIG_CRYPTO_SHA1_ARM64_CE=y
          CONFIG_CRYPTO_SHA256_ARM64=y
          CONFIG_CRYPTO_SHA2_ARM64_CE=y
          CONFIG_CRYPTO_SHA512_ARM64=y
          CONFIG_CRYPTO_SIMD=y
          CONFIG_REALTEK_PHY=y
          CONFIG_CPU_FREQ_GOV_USERSPACE=y
          CONFIG_CPU_FREQ_GOV_ONDEMAND=y
          CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
          CONFIG_MOTORCOMM_PHY=y
          CONFIG_SENSORS_PWM_FAN=y
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          cd openwrt
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/
      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/
      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
